#!/bin/zsh

{{ if eq .chezmoi.os "darwin" }}
echo "macos script running"

# Packages to install
PACKAGES=(
  "eza"      # ls replacement
  "htop"     # process viewer
  "neovim"   # vim replacement
  "zellij"   # tmux replacement
  "ripgrep"  # grep replacement
  "fd"       # find replacement
  "bat"      # cat replacement
  "uv"       # python package manager
  "rust"     # rust
  "zoxide"   # cd replacement
  "yazi"     # file manager
)
{{ else }}
echo "linux script running"

# Detect Linux distribution
if [ -f /etc/os-release ]; then
    . /etc/os-release
    OS=$NAME
    DISTRO=$ID
elif type lsb_release >/dev/null 2>&1; then
    OS=$(lsb_release -si)
    DISTRO=$(echo $OS | tr '[:upper:]' '[:lower:]')
elif [ -f /etc/redhat-release ]; then
    OS="Red Hat Enterprise Linux"
    DISTRO="rhel"
else
    OS=$(uname -s)
    DISTRO="unknown"
fi

echo "Detected OS: $OS"
echo "Distro: $DISTRO"

# Package installation function for different package managers
install_package() {
    local package=$1
    case $DISTRO in
        ubuntu|debian)
            if ! dpkg -l | grep -q "^ii  $package "; then
                printf "\n\e[33m$package \e[0mnot found. \e[0mInstalling..."
                sudo apt-get update -qq && sudo apt-get install -y $package
            else
                printf "\n\e[0m$package \e[0mfound. \e[0mContinuing..."
            fi
            ;;
        centos|rhel|fedora)
            if ! rpm -q $package &> /dev/null; then
                printf "\n\e[33m$package \e[0mnot found. \e[0mInstalling..."
                sudo dnf install -y $package
            else
                printf "\n\e[0m$package \e[0mfound. \e[0mContinuing..."
            fi
            ;;
        arch|manjaro)
            if ! pacman -Qs $package &> /dev/null; then
                printf "\n\e[33m$package \e[0mnot found. \e[0mInstalling..."
                sudo pacman -S --noconfirm $package
            else
                printf "\n\e[0m$package \e[0mfound. \e[0mContinuing..."
            fi
            ;;
        *)
            echo "Unsupported distribution: $DISTRO"
            return 1
            ;;
    esac
}

# Install basic packages available in package managers
printf '\n\e[33mInstalling basic packages...\e[0m'

case $DISTRO in
    ubuntu|debian)
        # Update package list first
        sudo apt-get update -qq
        
        # Install build tools first
        install_package "build-essential"
        install_package "cmake"
        
        # Install packages available in apt
        install_package "htop"
        install_package "neovim" 
        install_package "ripgrep"
        install_package "bat"
        
        # fd is named fd-find in Ubuntu/Debian
        if ! dpkg -l | grep -q "^ii  fd-find "; then
            printf "\n\e[33mfd \e[0mnot found. \e[0mInstalling as fd-find..."
            sudo apt-get install -y fd-find
            # Create symlink if it doesn't exist
            if [ ! -f ~/.local/bin/fd ]; then
                mkdir -p ~/.local/bin
                ln -sf /usr/bin/fdfind ~/.local/bin/fd
            fi
        else
            printf "\n\e[0mfd-find \e[0mfound. \e[0mContinuing..."
        fi
        ;;
    centos|rhel|fedora)
        # Install build tools first
        install_package "gcc"
        install_package "gcc-c++"
        install_package "make"
        install_package "cmake"
        
        install_package "htop"
        install_package "neovim"
        install_package "ripgrep" 
        install_package "bat"
        install_package "fd-find"
        ;;
    arch|manjaro)
        # Install build tools first
        install_package "base-devel"
        install_package "cmake"
        
        install_package "htop"
        install_package "neovim"
        install_package "ripgrep"
        install_package "bat"
        install_package "fd"
        ;;
esac

# Install Rust (required for some packages)
if ! command -v rustc &> /dev/null; then
    printf '\n\e[33mRust not found. \e[0mInstalling Rust...'
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
    source ~/.cargo/env
else
    printf '\n\e[0mRust found. \e[0mContinuing...'
fi

# Install packages that need to be installed via cargo or direct download
printf '\n\e[33mInstalling additional packages...\e[0m'

# Install eza (ls replacement)
if ! command -v eza &> /dev/null; then
    printf '\n\e[33meza \e[0mnot found. \e[0mInstalling...'
    case $DISTRO in
        ubuntu|debian)
            # For Ubuntu 22.04+
            sudo mkdir -p /etc/apt/keyrings
            wget -qO- https://raw.githubusercontent.com/eza-community/eza/main/deb.asc | sudo gpg --dearmor -o /etc/apt/keyrings/gierens.gpg
            echo "deb [signed-by=/etc/apt/keyrings/gierens.gpg] http://deb.gierens.de stable main" | sudo tee /etc/apt/sources.list.d/gierens.list
            sudo chmod 644 /etc/apt/keyrings/gierens.gpg /etc/apt/sources.list.d/gierens.list
            sudo apt update
            sudo apt install -y eza
            ;;
        *)
            cargo install eza
            ;;
    esac
else
    printf '\n\e[0meza \e[0mfound. \e[0mContinuing...'
fi

# Install zellij (tmux replacement)
if ! command -v zellij &> /dev/null; then
    printf '\n\e[33mzellij \e[0mnot found. \e[0mInstalling...'
    cargo install zellij
else
    printf '\n\e[0mzellij \e[0mfound. \e[0mContinuing...'
fi

# Install uv (python package manager)
if ! command -v uv &> /dev/null; then
    printf '\n\e[33muv \e[0mnot found. \e[0mInstalling...'
    curl -LsSf https://astral.sh/uv/install.sh | sh
else
    printf '\n\e[0muv \e[0mfound. \e[0mContinuing...'
fi

# Install zoxide (cd replacement)
if ! command -v zoxide &> /dev/null; then
    printf '\n\e[33mzoxide \e[0mnot found. \e[0mInstalling...'
    curl -sS https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | bash
else
    printf '\n\e[0mzoxide \e[0mfound. \e[0mContinuing...'
fi

# Install yazi (file manager)
if ! command -v yazi &> /dev/null; then
    printf '\n\e[33myazi \e[0mnot found. \e[0mInstalling...'
    cargo install yazi-fm yazi-cli
else
    printf '\n\e[0myazi \e[0mfound. \e[0mContinuing...'
fi

{{ end }}

{{ if eq .chezmoi.os "darwin" }}
CASK_PACKAGES=(
  # hiddenbar
)
# If Homebrew is not installed on the system, it will be installed here
if test ! $(which brew); then
   printf '\e[33mHomebrew not found. \e[0mInstalling Homebrew...'
   /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
else
  printf '\e[0mHomebrew found. Continuing...'
fi

printf '\n\e[33mInstalling brew packages...\e[0m'
# Get all installed packages once
INSTALLED_PACKAGES=($(brew list))

for package in "${PACKAGES[@]}"; do
  if [[ " ${INSTALLED_PACKAGES[@]} " =~ " ${package} " ]]; then
    printf "\n\e[0m$package \e[0mfound. \e[0mContinuing..."
  else
    printf "\n\e[33m$package \e[0mnot found. \e[0mInstalling..."
    brew install $package
  fi
done


printf '\n\e[33mInstalling cask apps...\e[0m'
for cask in "${CASK_PACKAGES[@]}"; do
  if ! brew list --cask $cask &> /dev/null; then
    printf "\n\e[33m$cask \e[0mnot found. \e[0mInstalling..."
    brew install --cask $cask
  else
    printf "\n\e[0m$cask \e[0mfound. \e[0mContinuing..."
  fi
done

{{ end }}

printf '\n\e[33mInstalling common packages for all systems...\e[0m'

# If Oh-my-zsh is not installed on the system, it will be installed here
if [ ! -d $HOME/.oh-my-zsh ]; then
  printf '\n\e[33mOh-my-zsh not found. \e[0mInstalling Oh-my-zsh...'
  sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
else
  printf '\n\e[0mOh-my-zsh found. Continuing...'
fi

# zsh-autosuggetions
if [ ! -d $HOME/.oh-my-zsh/custom/plugins/zsh-autosuggestions ]; then
    git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
else
  printf '\n\e[0mzsh-autosuggetions found. Continuing...'
fi

# zsh-syntax-highlighting
if [ ! -d $HOME/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting ]; then
    git clone https://github.com/zsh-users/zsh-syntax-highlighting ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
else
  printf '\n\e[0mzsh-syntax-highlighting found. Continuing...'
fi

# powerlevel10k
if [ ! -d $HOME/.oh-my-zsh/custom/themes/powerlevel10k ]; then
    git clone --depth=1 https://github.com/romkatv/powerlevel10k.git "${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k"
else
  printf '\n\e[0mpowerlevel10k found. Continuing...'
fi

# fzf
if [ ! -d $HOME/.fzf ]; then
    git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf && ~/.fzf/install
else
  printf '\n\e[0mfzf found. Continuing...'
fi

# bun
if [ ! -d $HOME/.bun ]; then
    curl -fsSL https://bun.sh/install | bash
else
  printf '\n\e[0mbun found. Continuing...'
fi

# bun completions
[ -s "{{ .chezmoi.homeDir }}/.bun/_bun" ] && source "{{ .chezmoi.homeDir }}/.bun/_bun"
